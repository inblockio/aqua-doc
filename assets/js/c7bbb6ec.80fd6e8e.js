"use strict";(self.webpackChunkaqua_docs_v_2=self.webpackChunkaqua_docs_v_2||[]).push([[4745],{788:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Protocol/design-principles","title":"Design Principles","description":"Lists the design principles underlying our reference implementation\\n","source":"@site/versioned_docs/version-1.1.0/Protocol/design-principles.md","sourceDirName":"Protocol","slug":"/Protocol/design-principles","permalink":"/docs/v1/Protocol/design-principles","draft":false,"unlisted":false,"editUrl":"https://github.com/inblockio/versioned_docs/version-1.1.0/Protocol/design-principles.md","tags":[],"version":"1.1.0","sidebarPosition":8,"frontMatter":{"title":"Design Principles","linkTitle":"Design Principles","weight":8,"sidebar_position":8,"description":"Lists the design principles underlying our reference implementation\\n"},"sidebar":"tutorialSidebar","previous":{"title":"Delegated Witnessing","permalink":"/docs/v1/Protocol/delegated-witnessing"},"next":{"title":"Guardian","permalink":"/docs/v1/Protocol/guardian"}}');var s=n(4848),a=n(8453);const o={title:"Design Principles",linkTitle:"Design Principles",weight:8,sidebar_position:8,description:"Lists the design principles underlying our reference implementation\n"},r=void 0,l={},c=[{value:"Private is Default",id:"private-is-default",level:2},{value:"Domain Access Levels",id:"domain-access-levels",level:3},{value:"Offline Capability",id:"offline-capability",level:2},{value:"Separation of Account and Service",id:"separation-of-account-and-service",level:2},{value:"Wallet&#39;s have one job. Keep private keys safe! (Account Management)",id:"wallets-have-one-job-keep-private-keys-safe-account-management",level:4},{value:"Data Vault (Service)- Has one job: keep the data safe!",id:"data-vault-service--has-one-job-keep-the-data-safe",level:4},{value:"Signature Login",id:"signature-login",level:2},{value:"Principle: Data Portability",id:"principle-data-portability",level:2},{value:"Implementation Specifics",id:"implementation-specifics",level:3}];function d(e){const i={a:"a",br:"br",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["The following design principles pertain to Aqua reference Implementation ",(0,s.jsx)(i.code,{children:"PKC"})]}),"\n",(0,s.jsx)(i.h2,{id:"private-is-default",children:"Private is Default"}),"\n",(0,s.jsxs)(i.p,{children:["The principle default to private is that no data of the PKC ",(0,s.jsx)(i.a,{href:"/docs/v1/Protocol/whitepaper#data-vault",children:"Data\nvault"})," is shared without it being explicitly\nauthorized by the associated account."]}),"\n",(0,s.jsx)(i.h3,{id:"domain-access-levels",children:"Domain Access Levels"}),"\n",(0,s.jsx)(i.p,{children:"Levels of access are:"}),"\n",(0,s.jsx)(i.p,{children:"Private: Only the account owner has access to files and services\ninitialized by his account. Agreement / Permissioned access: The Account\nowner grants other Account's access to files or services based on\nverifiable contracts which are themselves written with the Aqua Protocol\nto ensure they are forgery-proof and therefore safe. Public: Other\nAccount's have access to the file or service without agreements."}),"\n",(0,s.jsx)(i.h2,{id:"offline-capability",children:"Offline Capability"}),"\n",(0,s.jsx)(i.p,{children:"The PKC Data Vault follow's the principle of being able to run and be\nfunctional without internet connection after setup or through\ninstallation based on local installation files."}),"\n",(0,s.jsx)(i.p,{children:"This allows PKC setups to be kept offline from any internet connectivity\nwhile still functional. This can provide the required assurances for\nvery sensitive data."}),"\n",(0,s.jsx)(i.h2,{id:"separation-of-account-and-service",children:"Separation of Account and Service"}),"\n",(0,s.jsx)(i.p,{children:"Concern: There is a trend in the DIF/WC3 Identity space that some\nplayers like to accumulate personal identifiable data (PII) inside of\nWallets. We think this is a ill-fated direction and there should be\na clear separation between account and service. Wallets should not hold\npersonal identifiable data."}),"\n",(0,s.jsx)(i.p,{children:"Benefits:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"If the service gets hacked, no account related data is leaked if\nit's not stored."}),"\n",(0,s.jsx)(i.li,{children:"Account is not compromised, as there is no password saved within the\nservice with Password free login."}),"\n"]}),"\n",(0,s.jsxs)(i.h4,{id:"wallets-have-one-job-keep-private-keys-safe-account-management",children:[(0,s.jsx)(i.a,{href:"/docs/v1/Protocol/whitepaper#wallet",children:"Wallet"}),"'s have one job. Keep private keys safe! (Account Management)"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Should be stupid, simple, safe!"}),"\n",(0,s.jsxs)(i.li,{children:["Allowed operations:","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Signing"}),"\n",(0,s.jsx)(i.li,{children:"De- / Encrypt"}),"\n",(0,s.jsx)(i.li,{children:"Publishing transactions to service (e.g. witness networks)"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Ability to choose \u201chigh level of assurance\u201d depending on the stakes\nassociated with the account(s) managed by the wallet"}),"\n",(0,s.jsx)(i.li,{children:"Takes care of key recovery mechanisms"}),"\n"]}),"\n",(0,s.jsxs)(i.h4,{id:"data-vault-service--has-one-job-keep-the-data-safe",children:[(0,s.jsx)(i.a,{href:"/docs/v1/Protocol/whitepaper#data-vault",children:"Data Vault"})," (Service)- Has one job: keep the data safe!"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.a,{href:"Principle:_Offline_Capability",children:"Principle: Offline\nCapability"})," so it can run\noffline; works offline on local machine"]}),"\n",(0,s.jsx)(i.li,{children:"All significant actions authorized and managed though the wallet"}),"\n",(0,s.jsx)(i.li,{children:"Should offer good tooling for data storage and manipulation"}),"\n",(0,s.jsxs)(i.li,{children:["Strong access control: By ",(0,s.jsx)(i.a,{href:"Principle:_Default_is_Private",children:"Principle: Default is\nPrivate"})," which means data\nis only accessible by the owner."]}),"\n",(0,s.jsxs)(i.li,{children:["Data is well protected","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"The Data Vault should apply additional security features to keep\nthe data safe."}),"\n",(0,s.jsx)(i.li,{children:"e.g. Encryption of files / databases if service is not used."}),"\n",(0,s.jsx)(i.li,{children:"e.g. Encryption of pages with web-decryption (allowing for\nEnd-to-End Encryption)."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.li,{children:"Capabilities for sharing and publishing data"}),"\n",(0,s.jsxs)(i.li,{children:["Offers full Backup and Recovery mechanisms to move data freely","\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:(0,s.jsx)(i.a,{href:"Principle:_Data_Portability",title:"wikilink",children:"Principle: Data\nPortability"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"signature-login",children:"Signature Login"}),"\n",(0,s.jsx)(i.p,{children:"We do not use passwords for login but instead we use a signature of a\nprivate key to authorize access to a service. This increases security\nand does not require the user to remember a password, creating a better\nuser experience."}),"\n",(0,s.jsxs)(i.p,{children:["Pros:",(0,s.jsx)(i.br,{}),"\n","* Account owner uses his wallet to complete a signature challenge for\nlogin. With this challenge he proves that he owns the private key to a\npublic key. If the public key is registered as an account at the\nservice, the account is granted access."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"The password can't be leaked as it does not exist."}),"\n",(0,s.jsx)(i.li,{children:"Very high security"}),"\n"]}),"\n",(0,s.jsxs)(i.p,{children:["Contra:",(0,s.jsx)(i.br,{}),"\n","* Requires access to the wallet which holds the private key to\nauthorize access"]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"Not commonly understood by users as a way to login (new process)"}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"principle-data-portability",children:"Principle: Data Portability"}),"\n",(0,s.jsxs)(i.p,{children:["The Principle of Data Portability means that the\n",(0,s.jsx)(i.a,{href:"/docs/v1/Protocol/whitepaper#account",children:"Account"})," owner can instruct the Service to Export\nall data associated with the ",(0,s.jsx)(i.a,{href:"/docs/v1/Protocol/whitepaper#account",children:"Account"})," and is free\nto move this data to a new service which is capable of importing the\ndata."]}),"\n",(0,s.jsx)(i.h3,{id:"implementation-specifics",children:"Implementation Specifics"}),"\n",(0,s.jsxs)(i.p,{children:["In PKC's this is guaranteed by:",(0,s.jsx)(i.br,{}),"\n","* providing a Backup and restore procedure which allows to move data\nbetween PKC's and restore them in case of a required recovery."]}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsx)(i.li,{children:"providing a file import and export function"}),"\n",(0,s.jsx)(i.li,{children:"providing an import / export API"}),"\n"]}),"\n",(0,s.jsx)(i.p,{children:"Furthermore we ensure with the development of the MediaWiki Data\nAccounting Extension, that the data is still compatible with the legacy\nimport / export (which means only the text not the verification data is\nimported / exported."})]})}function h(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>r});var t=n(6540);const s={},a=t.createContext(s);function o(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(a.Provider,{value:i},e.children)}}}]);