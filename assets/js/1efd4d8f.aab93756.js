"use strict";(self.webpackChunkaqua_docs_v_2=self.webpackChunkaqua_docs_v_2||[]).push([[2045],{466:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Components/verifier/aqua-cli-javascript","title":"Aqua CLI Javascript Implementation","description":"Aqua cli js  is a command line utility.That enables you to create aqua chains, verify aqua chains, witness and sign aqua chains.","source":"@site/versioned_docs/version-1.2.0/Components/verifier/aqua-cli-javascript.md","sourceDirName":"Components/verifier","slug":"/Components/verifier/aqua-cli-javascript","permalink":"/docs/v2/Components/verifier/aqua-cli-javascript","draft":false,"unlisted":false,"editUrl":"https://github.com/inblockio/versioned_docs/version-1.2.0/Components/verifier/aqua-cli-javascript.md","tags":[],"version":"1.2.0","frontMatter":{"title":"Aqua CLI Javascript Implementation"},"sidebar":"tutorialSidebar","previous":{"title":"Verifier","permalink":"/docs/v2/Components/verifier/"},"next":{"title":"Aqua CLI Rust Implementation","permalink":"/docs/v2/Components/verifier/aqua-cli-rust"}}');var t=i(4848),a=i(8453);const r={title:"Aqua CLI Javascript Implementation"},o=void 0,l={},c=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Aqua cli js  is a command line utility.That enables you to create aqua chains, verify aqua chains, witness and sign aqua chains."}),"\n",(0,t.jsx)(n.admonition,{type:"warning",children:(0,t.jsx)(n.p,{children:"If you are just getting started use the rust cli , the js version is used to prototype ideas."})}),"\n",(0,t.jsxs)(n.p,{children:["\ud83d\udca1 the repo location\n",(0,t.jsx)(n.code,{children:"https://github.com/inblockio/aqua-verifier-js"})]}),"\n",(0,t.jsx)(n.p,{children:"\ud83d\udcbf Envireonment set up"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["ensure to install a js runtime, we use node ",(0,t.jsx)(n.a,{href:"https://nodejs.org/en/download/package-manager",children:"here"}),", the latest version."]}),"\n",(0,t.jsxs)(n.li,{children:["ensure to have ",(0,t.jsx)(n.code,{children:"Yarn"})," or ",(0,t.jsx)(n.code,{children:"npm"})]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\ud83d\udcdd Usage"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"git clone  git@github.com:inblockio/aqua-cli-js.git"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"cd aqu-cli-js &&  npm i && npm build"})}),"\n",(0,t.jsxs)(n.li,{children:["finally create a credentials.json ",(0,t.jsx)(n.code,{children:"touch credentials.json"}),"  paste the following content into the file , filling with appropriate details","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'    {\n        "mnemonic": "sample sample sample sample sample sample sample asampl  sample sample sample author matter",\n        "nostr_sk": "xxxxxxxxxxxxxxxx",\n        "did:key": "xxxxxxxxxxxxxx"\n    }\n'})}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["To get started run","\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"./notarize.js --help"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"notarize.js [OPTIONS] <filename>\nwhich generates filename.aqua.json\n\nOptions:\n--sign [cli|metamask|did]\n    Sign with either of:\n    1. the Ethereum seed phrase provided in mnemonic.txt\n    2. MetaMask\n    3. DID key\n--witness-eth      Witness to Ethereum on-chain with MetaMask\n--witness-nostr    Witness to Nostr network\n--witness-tsa      Witness to TSA DigiCert\n--link <filename.aqua.json>\n    Add a link to an AQUA chain as a dependency\n\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"./verify.js --help"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"    Usage:\n    verify.js [OPTIONS] <page title>\n    or\n    verify.js [OPTIONS] --file <offline file.json or file.xml>\n\n    Options:\n    -v                     Verbose\n    --server               <The url of the server, e.g. https://pkc.inblock.io>\n    --ignore-merkle-proof  Ignore verifying the witness merkle proof of each revision\n    --file                 (If present) The file to read from for the data\n    If the --server is not specified, it defaults to http://localhost:9352\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>o});var s=i(6540);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);